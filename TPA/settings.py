"""
Django settings for TPA project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import socket
def ping(ip_address):
    # Définit le temps d'attente en secondes
    timeout = 2

    # Crée un objet de type socket pour IPv4
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Configure le temps d'attente de la connexion
    sock.settimeout(timeout)

    # Essaie de se connecter à l'adresse IP spécifiée sur le port 80 (HTTP)
    try:
        result = sock.connect_ex((ip_address, 5432))
        if result == 0:
            # La connexion a réussi, l'adresse IP est accessible
            return True
        else:
            # La connexion a échoué, l'adresse IP n'est pas accessible
            return False
    except:
        # Une erreur s'est produite lors de la tentative de connexion
        return False

    # Ferme la connexion socket
    sock.close()

from pathlib import Path
import os
import dj_database_url
import environ


if 'production' in os.environ:
    production = True
else:
    production = False



if production is False:
    env = environ.Env()
    environ.Env.read_env('config.env')
elif production is True:
    env = environ.Env()
    environ.Env.read_env('prod_config.env')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1qktg1u#($^qw5a+6fo(gr4h3@vk87d2%a@s^xd#$h*m#^te_k'
if 'SECRET_KEY' in os.environ:
    SECRET_KEY = os.environ["SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
# Generally avoid wildcards(*). However since Heroku router provides hostname validation it is ok
if production is True:
    ALLOWED_HOSTS = ["*"]
elif production is False:
    ALLOWED_HOSTS = []

# SECURITY WARNING: don't run with debug turned on in production!
#if not IS_HEROKU:
DEBUG = True
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'concert',
]

MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware"
]

ROOT_URLCONF = 'TPA.urls'
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR /'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'concert.context_processor.concert',
            ],
        },
    },
]

WSGI_APPLICATION = 'TPA.wsgi.application'

def has_numbers(inputString):
    return any(char.isdigit() for char in inputString)

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
if production is True:
    DB_HOST = os.environ.get('DB_HOST')
    if not ping(DB_HOST):
        DB_HOST = "192.168.1.3"
    DATABASES = {
        'default': dj_database_url.config(
            default= f"postgres://postgres:{os.environ.get('DB_PASSWORD')}@{DB_HOST}:5432/postgres",
            conn_max_age=600,
            conn_health_checks=True,
        ),
    }
elif production is False:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'db.sqlite3',
        }}
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'fr-be'

TIME_ZONE = 'UTC'
DATETIME_FORMAT="%Y-%m-%d%H:%M:%S"

USE_I18N = True

USE_TZ = True

BASE_URL = "http://127.0.0.1:8000"
if production is True:
    BASE_URL = "http://martingouv.ddns.net"
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
STOCK = 50
PROD = production

# config
if production:
    STRIPE_PUBLIC_KEY = "pk_live_51LujZ6Fo3msg8YF5jhdKimvvLjFfWWgEEiLmFGoKqMq2KZ5OzE2EZjnq3dIC7tZL2bzsWxMG997RseP5GUWaUNy8005s27r3i7"
else:
    STRIPE_PUBLIC_KEY = env("STRIPE_PUBLIC_KEY")
STRIPE_SECRET_KEY = env("STRIPE_SECRET_KEY")
STRIPE_WEBHOOK = env("STRIPE_WEBHOOK")
EMAIL_HOST = env("EMAIL_HOST")
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
STRIPE_PRODUCT_ID = env("STRIPE_PRODUCT_ID")
STRIPE_PRICE_ID = env("STRIPE_PRICE_ID")

